import{_ as s,o as n,c as a,a as l}from"./app-4f7ad5aa.js";const p={},o=l(`<p>模型平台是个强大的脚本执行平台，除了我们在基础教程部分介绍的顺序执行语句外，可以执行带条件分支和循环以及无条件跳转等功能，模型量化交易版在工作时，由于内部运行机制不同，分为序列模式以及逐K线模式，我们这里先从序列模式介绍公式系统的运行机理，逐K线模式我们在后面会另有介绍。下面我们将逐步向大家介绍如何使用模型中的控制语句编写模型。</p><h3 id="序列变量与数组" tabindex="-1"><a class="header-anchor" href="#序列变量与数组" aria-hidden="true">#</a> 序列变量与数组</h3><p>在模型公式系统中，需要大量运用并区分数组、单值变量及序列变量的概念，这些概念也是进一步学习编程所必需的，因此有必要简单描述并初步掌握这些概念。</p><h4 id="常数与单值变量" tabindex="-1"><a class="header-anchor" href="#常数与单值变量" aria-hidden="true">#</a> 常数与单值变量</h4><p>常数，在模型编辑器中，就是不允许改变的数值，在我们平常写公式时，为了公式更加灵活，大量使用了参数，这些参数就是常数，不允许在公式中改变，比如参数n(1,1,25)， 表示参数n最小值是1、最大值是25、默认值是1，如果在公式中再写一行“n:=30;”就是非法的。</p><p>单值变量，即只有一个数值，不随时间而改变，比如“x:100;”，就是定义了一个单值变量x=100，这个值不随时间而改变，做成副图指标看，今天x是100明天x也是100，直到最后1 根K线也是100。</p><h4 id="数组" tabindex="-1"><a class="header-anchor" href="#数组" aria-hidden="true">#</a> 数组</h4><p>系统中，和常规数组概念不同并非构建单纯的有序数据的集合，通过数组可以建立有序的一一对应关系。通过这种对应关系，数组结构可以定义多样的对应关系，如常规数组 A{1,2,3,4,5...}~{34,235,234,626,666...}，从而得到 A[1]=34,A[2]=235...;也可以定义不同的数据类型的下标和数组值来构成对应关系,如例如对于数组 B{&#39;SH6000000&#39;, &#39;SZ000001&#39;...}~{＇上海＇＇深圳＇...},从而有 B[SH600000]=上海...</p><p>一般来说，数组的使用，要先定义，然后初始化（即赋予数组的每个元素一个初始的数据）。在模型量化交易版中，目前只支持一维数组，并且下标是从 1 开始的。</p><p>在模型量化交易版中,如何定义初始化并使用数组?</p><details class="custom-container details"><summary>示例1: 定义一个含 10 个元素的数值型数组</summary><p>定义数组的语句是 variable,公式代码如下：</p><div class="language-vb line-numbers-mode" data-ext="vb"><pre class="shiki dracula" style="background-color:#282A36;" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">variable:A[</span><span style="color:#BD93F9;">10</span><span style="color:#F8F8F2;">]</span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">; //定义一个含 </span><span style="color:#BD93F9;">10</span><span style="color:#F8F8F2;"> 个元素的数值型数组 A，并把所有元素初始化为 </span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></details><details class="custom-container details"><summary>示例2: 定义一个 3 个元素的字符串型的数组</summary><p>公式代码如下：</p><div class="language-vb line-numbers-mode" data-ext="vb"><pre class="shiki dracula" style="background-color:#282A36;" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">variable:B[</span><span style="color:#BD93F9;">3</span><span style="color:#F8F8F2;">]</span><span style="color:#FF79C6;">=</span><span style="color:#6272A4;">&#39;abc&#39;; //定义一个含 3 个元素的字符串型数组 B，并把所有元素初始化为&#39;abc&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></details><details class="custom-container details"><summary>示例3: 把{1,3,5,7,9}定义为数组</summary><p>分析：这组数据共有 5 个数值型数据，因此应定义长度为 5 的数组，并给每个元素赋值。 公式代码如下：</p><div class="language-vb line-numbers-mode" data-ext="vb"><pre class="shiki dracula" style="background-color:#282A36;" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">variable:A[</span><span style="color:#BD93F9;">5</span><span style="color:#F8F8F2;">]</span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">; </span></span>
<span class="line"><span style="color:#F8F8F2;">A[</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">]:</span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">A[</span><span style="color:#BD93F9;">2</span><span style="color:#F8F8F2;">]:</span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;">3</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">A[</span><span style="color:#BD93F9;">3</span><span style="color:#F8F8F2;">]:</span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;">5</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">A[</span><span style="color:#BD93F9;">4</span><span style="color:#F8F8F2;">]:</span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;">7</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">A[</span><span style="color:#BD93F9;">5</span><span style="color:#F8F8F2;">]:</span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;">9</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>前面所举的关于数组的例子,都是概念性的,单纯数组的应用一般都比较复杂，比如，从每天的分笔成交中统计，各个成交价位成交的笔数。等到后面讲完循环有机会时再写具体的代码。</p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>对于使用 for 循环类的函数对数组执行循环赋值时，可以不设置下标顺序，系统会依据数组下标在系统中存储的值的大小顺序依次遍历。</p></div><h4 id="序列变量" tabindex="-1"><a class="header-anchor" href="#序列变量" aria-hidden="true">#</a> 序列变量</h4><p>我们平时接触最多的是收盘价 close，写一行代码“fc:close&quot;，就是定义了一个变量 fc， 并把收盘价赋值给变量 fc。这里变量 fc 就是序列变量，因为 fc 不是一个值，而是一序列随时间而变化的值(收盘价)，在K 线图中，从第 1 根 K 线到最后 1 根 K 线都有一个收盘价，因此fc 跟单值变量不同，是由一系列的值组成的变量，因此我们称之为序列变量。事实上，把 “fc:close”这行代码做成一个指标，就可以看出 fc 是一条变化的曲线而不是一条水平直线。</p><p>量化交易版公式编辑系统中，可以把序列变量等同于一个数组，这是一个特殊的数组，这个数组的最小下标是从序列变量的起始有效位置开始，数组的最大下标是 K 线数量， 其中 K 线的数量，可以从 datacount 函数得到。</p><p>比如“fc:close;&quot;，这行代码，可以把 fc 看成是一个下标从 1 开始直到 datacount 的数组。如果我们想知道第 1、2、5、最后 1 根 K 线的收盘价，可以写成如下代码：</p><div class="language-vb line-numbers-mode" data-ext="vb"><pre class="shiki dracula" style="background-color:#282A36;" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">fc:</span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;">close;//定义一个序列变量，相当于是一个数组 </span></span>
<span class="line"><span style="color:#F8F8F2;">k1:fc[</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">];//第１根 K 线的收盘价 </span></span>
<span class="line"><span style="color:#F8F8F2;">k2:fc[</span><span style="color:#BD93F9;">2</span><span style="color:#F8F8F2;">];//第 </span><span style="color:#BD93F9;">2</span><span style="color:#F8F8F2;"> 根 K 线的收盘价 </span></span>
<span class="line"><span style="color:#F8F8F2;">k3:fc[</span><span style="color:#BD93F9;">5</span><span style="color:#F8F8F2;">];//第 </span><span style="color:#BD93F9;">5</span><span style="color:#F8F8F2;"> 根 K 线的收盘价 </span></span>
<span class="line"><span style="color:#F8F8F2;">k_end:fc[datacount];//最后 </span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;"> 根 K 线的收盘价</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="循环语句" tabindex="-1"><a class="header-anchor" href="#循环语句" aria-hidden="true">#</a> 循环语句</h3><p>量化交易版中的循环语句有两个类别，一个是 FOR TO … ，另一个是REPEATUNTIL …，这里我们重点介绍FOR循环，REPEAT UNTIL的例子，用户请自行在量化交易版公式编辑器中软件函数列表中查看使用方法。</p><h4 id="for递增循环" tabindex="-1"><a class="header-anchor" href="#for递增循环" aria-hidden="true">#</a> FOR递增循环</h4><p>先从一个的实例开始，求当前股票收盘价的2日算术平均价，为了方便起见，以刚上市不久的603798康普顿来说明，首先定义序列变量fc为收盘价，根据上一讲我们知道，fc可以看成是一个数组，因此，数组fc的每一个元素如下表所示：</p><div class="language-vb line-numbers-mode" data-ext="vb"><pre class="shiki dracula" style="background-color:#282A36;" tabindex="0"><code><span class="line"><span style="color:#BD93F9;">603798</span><span style="color:#F8F8F2;"> 康普顿</span></span>
<span class="line"><span style="color:#F8F8F2;">         时间    收盘</span></span>
<span class="line"><span style="color:#F8F8F2;">fc[</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">] </span><span style="color:#BD93F9;">2016</span><span style="color:#F8F8F2;">/</span><span style="color:#BD93F9;">04</span><span style="color:#F8F8F2;">/</span><span style="color:#BD93F9;">06</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">20.64</span></span>
<span class="line"><span style="color:#F8F8F2;">fc[</span><span style="color:#BD93F9;">2</span><span style="color:#F8F8F2;">] </span><span style="color:#BD93F9;">2016</span><span style="color:#F8F8F2;">/</span><span style="color:#BD93F9;">04</span><span style="color:#F8F8F2;">/</span><span style="color:#BD93F9;">07</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">22.70</span></span>
<span class="line"><span style="color:#F8F8F2;">fc[</span><span style="color:#BD93F9;">3</span><span style="color:#F8F8F2;">] </span><span style="color:#BD93F9;">2016</span><span style="color:#F8F8F2;">/</span><span style="color:#BD93F9;">04</span><span style="color:#F8F8F2;">/</span><span style="color:#BD93F9;">08</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">24.97</span></span>
<span class="line"><span style="color:#F8F8F2;">fc[</span><span style="color:#BD93F9;">4</span><span style="color:#F8F8F2;">] </span><span style="color:#BD93F9;">2016</span><span style="color:#F8F8F2;">/</span><span style="color:#BD93F9;">04</span><span style="color:#F8F8F2;">/</span><span style="color:#BD93F9;">11</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">27.47</span></span>
<span class="line"><span style="color:#F8F8F2;">fc[</span><span style="color:#BD93F9;">5</span><span style="color:#F8F8F2;">] </span><span style="color:#BD93F9;">2016</span><span style="color:#F8F8F2;">/</span><span style="color:#BD93F9;">04</span><span style="color:#F8F8F2;">/</span><span style="color:#BD93F9;">12</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">30.22</span></span>
<span class="line"><span style="color:#F8F8F2;">fc[</span><span style="color:#BD93F9;">6</span><span style="color:#F8F8F2;">] </span><span style="color:#BD93F9;">2016</span><span style="color:#F8F8F2;">/</span><span style="color:#BD93F9;">04</span><span style="color:#F8F8F2;">/</span><span style="color:#BD93F9;">13</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">33.24</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>显然， 2日平均收盘价必须是从第2根K线即上市后第2日开始，到最后一天结束，设2日平均股价用序列变量ma2来表示，由于2日平均收盘价等于当日收盘价加昨收盘除以2，如果手工一行一行来写代码计算，则：</p><div class="language-vb line-numbers-mode" data-ext="vb"><pre class="shiki dracula" style="background-color:#282A36;" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">ma2[</span><span style="color:#BD93F9;">2</span><span style="color:#F8F8F2;">]:</span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;">(fc[</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">]</span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;">fc[</span><span style="color:#BD93F9;">2</span><span style="color:#F8F8F2;">])/</span><span style="color:#BD93F9;">2</span><span style="color:#F8F8F2;">; //今收盘与昨收盘之和除以2，等于今2日平均收盘价</span></span>
<span class="line"><span style="color:#F8F8F2;">ma2[</span><span style="color:#BD93F9;">3</span><span style="color:#F8F8F2;">]:</span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;">(fc[</span><span style="color:#BD93F9;">2</span><span style="color:#F8F8F2;">]</span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;">fc[</span><span style="color:#BD93F9;">3</span><span style="color:#F8F8F2;">])/</span><span style="color:#BD93F9;">2</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">ma2[</span><span style="color:#BD93F9;">4</span><span style="color:#F8F8F2;">]:</span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;">(fc[</span><span style="color:#BD93F9;">3</span><span style="color:#F8F8F2;">]</span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;">fc[</span><span style="color:#BD93F9;">4</span><span style="color:#F8F8F2;">])/</span><span style="color:#BD93F9;">2</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">ma2[</span><span style="color:#BD93F9;">5</span><span style="color:#F8F8F2;">]:</span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;">(fc[</span><span style="color:#BD93F9;">4</span><span style="color:#F8F8F2;">]</span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;">fc[</span><span style="color:#BD93F9;">5</span><span style="color:#F8F8F2;">])/</span><span style="color:#BD93F9;">2</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">ma2[</span><span style="color:#BD93F9;">6</span><span style="color:#F8F8F2;">]:</span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;">(fc[</span><span style="color:#BD93F9;">5</span><span style="color:#F8F8F2;">]</span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;">fc[</span><span style="color:#BD93F9;">6</span><span style="color:#F8F8F2;">])/</span><span style="color:#BD93F9;">2</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">分析上面代码，2日平均价的计算特点是：</span></span>
<span class="line"><span style="color:#F8F8F2;">① 从第2根K线开始计算的</span></span>
<span class="line"><span style="color:#F8F8F2;">② 每天的均价都等于(今收盘</span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;">昨收盘)/</span><span style="color:#BD93F9;">2</span></span>
<span class="line"><span style="color:#F8F8F2;">③ 直到最后1根K线结束</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>容易知道，如果有1000根K线，则要写999行代码，显然效率太低了。我们来找找规律，如果是中间的某天即第i天，则上面的表达式可以写为</p><div class="language-vb line-numbers-mode" data-ext="vb"><pre class="shiki dracula" style="background-color:#282A36;" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">ma2[i]:</span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;">(fc[i</span><span style="color:#BD93F9;">-1</span><span style="color:#F8F8F2;">]</span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;">fc[i])/</span><span style="color:#BD93F9;">2</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这个i是从第2根K线开始直到最后1根K线。这些计算都是重复同样的计算，只不过i不同罢了。如果有一种方法，可以自动重复计算这些表达式，并且每重复一次，i自动增加1，就可以达到目的了。由此我们定义一种循环语句，可以自动循环、重复运行某一行代码。在迅投量化投研平台中，循环语句有2种，下面先介绍FOR循环语句</p><p>语法：</p><div class="language-vb line-numbers-mode" data-ext="vb"><pre class="shiki dracula" style="background-color:#282A36;" tabindex="0"><code><span class="line"><span style="color:#FF79C6;">FOR</span><span style="color:#F8F8F2;"> var</span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;">n1 </span><span style="color:#FF79C6;">TO</span><span style="color:#F8F8F2;"> n2 </span><span style="color:#FF79C6;">DO</span><span style="color:#F8F8F2;"> expr;</span></span>
<span class="line"><span style="color:#F8F8F2;">{从 var</span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;">n1 开始，直到 var</span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;">n2，开始循环执行 expr 语句，每执行一次var加1。这里，var称之为循环变量。}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>用循环语句表达上面计算2日平均收盘价，公式代码如下：</p><div class="language-vb line-numbers-mode" data-ext="vb"><pre class="shiki dracula" style="background-color:#282A36;" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">fc:</span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;">close; //定义序列变量fc为收盘价</span></span>
<span class="line"><span style="color:#FF79C6;">for</span><span style="color:#F8F8F2;"> i</span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;">2</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">to</span><span style="color:#F8F8F2;"> datacount </span><span style="color:#FF79C6;">do</span><span style="color:#F8F8F2;"> ma2[i] :</span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;">(fc[i</span><span style="color:#BD93F9;">-1</span><span style="color:#F8F8F2;">]</span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;">fc[i])/</span><span style="color:#BD93F9;">2</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">//从i</span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;">2到i</span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;">datacount循环执行ma2[i] :</span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;">(fc[i</span><span style="color:#BD93F9;">-1</span><span style="color:#F8F8F2;">]</span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;">fc[i])/</span><span style="color:#BD93F9;">2</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="for递增循环-1" tabindex="-1"><a class="header-anchor" href="#for递增循环-1" aria-hidden="true">#</a> FOR递增循环</h4><p>上面的FOR循环，循环变量是每次递增1，可称之为递增FOR循环。还有一种FOR循环是递减FOR循环，循环变量是每次递减1，语法如下：</p><div class="language-vb line-numbers-mode" data-ext="vb"><pre class="shiki dracula" style="background-color:#282A36;" tabindex="0"><code><span class="line"><span style="color:#FF79C6;">FOR</span><span style="color:#F8F8F2;"> var</span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;">n1 DOWNTO n2 </span><span style="color:#FF79C6;">DO</span><span style="color:#F8F8F2;"> expr2;</span></span>
<span class="line"><span style="color:#F8F8F2;">{从 var</span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;">n1 开始到 var</span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;">n2 开始循环执行 expr 语句，每执行一次var减1}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>上面我们设计2日平均收盘价的公式时，是从前面往后面计算的，仔细想想，其实也可以从后面往前面计算，公式代码如下：</p><div class="language-vb line-numbers-mode" data-ext="vb"><pre class="shiki dracula" style="background-color:#282A36;" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">fc:</span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;">close;</span></span>
<span class="line"><span style="color:#FF79C6;">for</span><span style="color:#F8F8F2;"> i</span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;">datacount downto </span><span style="color:#BD93F9;">2</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">do</span><span style="color:#F8F8F2;"> ma2[i] :</span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;">(fc[i</span><span style="color:#BD93F9;">-1</span><span style="color:#F8F8F2;">]</span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;">fc[i])/</span><span style="color:#BD93F9;">2</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="复合语句" tabindex="-1"><a class="header-anchor" href="#复合语句" aria-hidden="true">#</a> 复合语句</h3><p>复合语句注释: 把多条语句看作一条语句</p><p>语法:BEGIN...END</p><p>这里，begin和end是成对出现的，被begin和end包围起来的语句可以有很多条，这些语句可以看成是一条复合语句。</p><p>下面我们用begin…end来改写递增循环计算2日平均收盘价的公式：</p><div class="language-vb line-numbers-mode" data-ext="vb"><pre class="shiki dracula" style="background-color:#282A36;" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">fc:</span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;">close; //定义序列变量为收盘价</span></span>
<span class="line"><span style="color:#FF79C6;">for</span><span style="color:#F8F8F2;"> i</span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;">2</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">to</span><span style="color:#F8F8F2;"> datacount </span><span style="color:#FF79C6;">do</span></span>
<span class="line"><span style="color:#F8F8F2;">begin</span></span>
<span class="line"><span style="color:#F8F8F2;">a:</span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> fc[i</span><span style="color:#BD93F9;">-1</span><span style="color:#F8F8F2;">]</span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;">fc[i]; //定义一个临时的单值变量a，保存中间计算结果</span></span>
<span class="line"><span style="color:#F8F8F2;">ma2[i] :</span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> a/</span><span style="color:#BD93F9;">2</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#8BE9FD;">end</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这段代码，就是由2行代码组成的复合语句，被循环执行若干次。为了代码容易分辨，我们特别把复合语句中的2行代码，都向右缩了4格，表明这是2行复合语句，是被循环语句所控制的。以前对于这类分层次的语句，都要进行缩格，便于看懂代码，特别是复杂的代码，如果不进行缩格，时间久了，恐怕连自己都很难看懂，大家一开始就要养成好习惯。</p><p>有人会问，书写代码不缩格行吗？不缩格公式会不会出错？答案是，缩格书写代码，仅仅是为了方便看清程序代码的逻辑层次，对公式的运行没有影响。</p><p>有了复合语句，循环的功能就更加强大了，可以轻松实现多重循环，即循环中套循环。在计算N日的平均价时会用到，如果事先不知道N是多少，就要用到二重循环。对于循环中要执行的语句，如果重复太多，也可以使用多重循环来简化。以二重循环为例，大致结构如下：</p><div class="language-vb line-numbers-mode" data-ext="vb"><pre class="shiki dracula" style="background-color:#282A36;" tabindex="0"><code><span class="line"><span style="color:#FF79C6;">for</span><span style="color:#F8F8F2;"> i</span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;">n1 </span><span style="color:#FF79C6;">to</span><span style="color:#F8F8F2;"> n2 </span><span style="color:#FF79C6;">do</span></span>
<span class="line"><span style="color:#F8F8F2;">begin</span></span>
<span class="line"><span style="color:#F8F8F2;">语句;</span></span>
<span class="line"><span style="color:#F8F8F2;">…</span></span>
<span class="line"><span style="color:#FF79C6;">for</span><span style="color:#F8F8F2;"> j</span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;">m1 </span><span style="color:#FF79C6;">to</span><span style="color:#F8F8F2;"> m2 </span><span style="color:#FF79C6;">do</span></span>
<span class="line"><span style="color:#F8F8F2;">begin</span></span>
<span class="line"><span style="color:#F8F8F2;">语句;</span></span>
<span class="line"><span style="color:#F8F8F2;">…</span></span>
<span class="line"><span style="color:#8BE9FD;">end</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">语句;</span></span>
<span class="line"><span style="color:#F8F8F2;">…</span></span>
<span class="line"><span style="color:#8BE9FD;">end</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="条件语句" tabindex="-1"><a class="header-anchor" href="#条件语句" aria-hidden="true">#</a> 条件语句</h3><p>条件语句的语法如下：</p><p>IF条件语句</p><p>语法:IF cond THEN expr1 ELSE expr2</p><p>如果cond 条件成立，则执行语句 expr1，否则执行 expr2 语句。</p><details class="custom-container details"><summary>说明</summary><div class="language-vb line-numbers-mode" data-ext="vb"><pre class="shiki dracula" style="background-color:#282A36;" tabindex="0"><code><span class="line"><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">、在条件判断比较简单的情况下，</span><span style="color:#FF79C6;">ELSE</span><span style="color:#F8F8F2;"> expr2 子句可以省略。</span></span>
<span class="line"><span style="color:#BD93F9;">2</span><span style="color:#F8F8F2;">、条件 cond 可以是单值变量，也可以为序列变量。当为序列变量时，cond将取最后一个周期的值做为条件判断语句。条件语句的语法比较简单，但使用时却容易出错，下面举若干</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></details><p>条件语句的语法比较简单，但使用时却容易出错，下面举若干示例。</p><details class="custom-container details"><summary>例1：修改成交量公式VOL，当流通盘不为零且当前周期为日以上周期时，显示换手率，代码参考如下（仿此，大家绕过指标模组，可以自行设计，“绑定”到周期、券种等的公式）</summary><p>代码:</p><div class="language-vb line-numbers-mode" data-ext="vb"><pre class="shiki dracula" style="background-color:#282A36;" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">VOL,VOLSTICK;</span></span>
<span class="line"><span style="color:#F8F8F2;">MA1:</span><span style="color:#50FA7B;">MA</span><span style="color:#F8F8F2;">(VOL,M1);</span></span>
<span class="line"><span style="color:#F8F8F2;">MA2:</span><span style="color:#50FA7B;">MA</span><span style="color:#F8F8F2;">(VOL,M2);</span></span>
<span class="line"><span style="color:#F8F8F2;">MA3:</span><span style="color:#50FA7B;">MA</span><span style="color:#F8F8F2;">(VOL,M3);</span></span>
<span class="line"><span style="color:#FF79C6;">if</span><span style="color:#F8F8F2;"> capital</span><span style="color:#FF79C6;">&gt;</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">and</span><span style="color:#F8F8F2;"> DATATYPE</span><span style="color:#FF79C6;">&gt;=</span><span style="color:#BD93F9;">6</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">then</span></span>
<span class="line"><span style="color:#F8F8F2;">换手率:vol/capital; //日以上周期及非指数个股，显示换手率</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当切换到60分钟及以下周期，或者切换到大盘（此时流通盘＝0），会发现“换手率”指标线、名称及数值都不显示。</p><p>以上是较简单的情况，没有使用 ELSE expr2 子句。上面代码稍加改进，使用复合语句，使之适用于任意周期：</p></details><details class="custom-container details"><summary>例2，修改成交量公式，流通盘不为0时，显示换手率（60分钟及以下周期，计算当日最新的换手率），代码参考如下：</summary><p>代码:</p><div class="language-vb line-numbers-mode" data-ext="vb"><pre class="shiki dracula" style="background-color:#282A36;" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">VOL,VOLSTICK;</span></span>
<span class="line"><span style="color:#F8F8F2;">MA1:</span><span style="color:#50FA7B;">MA</span><span style="color:#F8F8F2;">(VOL,M1);</span></span>
<span class="line"><span style="color:#F8F8F2;">MA2:</span><span style="color:#50FA7B;">MA</span><span style="color:#F8F8F2;">(VOL,M2);</span></span>
<span class="line"><span style="color:#F8F8F2;">MA3:</span><span style="color:#50FA7B;">MA</span><span style="color:#F8F8F2;">(VOL,M3);</span></span>
<span class="line"><span style="color:#FF79C6;">IF</span><span style="color:#F8F8F2;"> CAPITAL</span><span style="color:#FF79C6;">&gt;</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">then</span><span style="color:#F8F8F2;"> //如果换手率＞</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">,则</span></span>
<span class="line"><span style="color:#F8F8F2;">IFDATATYPE</span><span style="color:#FF79C6;">&gt;=</span><span style="color:#BD93F9;">6</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">then</span><span style="color:#F8F8F2;"> //如果周期为日及以上的较长周期,则</span></span>
<span class="line"><span style="color:#F8F8F2;">b:</span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;">VOL/CAPITAL</span><span style="color:#FF79C6;">*</span><span style="color:#BD93F9;">100</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> //否则</span></span>
<span class="line"><span style="color:#F8F8F2;">begin //复合语句开始，即以下3条语句，视为1条语句，end表示复合语句结束</span></span>
<span class="line"><span style="color:#F8F8F2;">tj:</span><span style="color:#FF79C6;">=</span><span style="color:#8BE9FD;">DAY</span><span style="color:#FF79C6;">&gt;</span><span style="color:#50FA7B;">REF</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;">DAY</span><span style="color:#F8F8F2;">,</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">or</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">BARSSINCE</span><span style="color:#F8F8F2;">(CLOSE)</span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">ts:</span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;">BARSLAST</span><span style="color:#F8F8F2;">(tj)</span><span style="color:#FF79C6;">+</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">b:</span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;">SUM</span><span style="color:#F8F8F2;">(VOL,ts)/CAPITAL</span><span style="color:#FF79C6;">*</span><span style="color:#BD93F9;">100</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#8BE9FD;">end</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">换手率:b;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="custom-container details"><summary>例3、通过参数N，控制调整均线数，代码参考如下：</summary><p>代码:</p><div class="language-vb line-numbers-mode" data-ext="vb"><pre class="shiki dracula" style="background-color:#282A36;" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">input:</span><span style="color:#50FA7B;">p1</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">5</span><span style="color:#F8F8F2;">,</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">,</span><span style="color:#BD93F9;">300</span><span style="color:#F8F8F2;">),</span><span style="color:#50FA7B;">p2</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">10</span><span style="color:#F8F8F2;">,</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">,</span><span style="color:#BD93F9;">300</span><span style="color:#F8F8F2;">),</span><span style="color:#50FA7B;">p3</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">20</span><span style="color:#F8F8F2;">,</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">,</span><span style="color:#BD93F9;">300</span><span style="color:#F8F8F2;">),</span><span style="color:#50FA7B;">p4</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">30</span><span style="color:#F8F8F2;">,</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">,</span><span style="color:#BD93F9;">300</span><span style="color:#F8F8F2;">),</span><span style="color:#50FA7B;">n</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">4</span><span style="color:#F8F8F2;">,</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">,</span><span style="color:#BD93F9;">4</span><span style="color:#F8F8F2;">);{参数定义}</span></span>
<span class="line"><span style="color:#FF79C6;">IF</span><span style="color:#F8F8F2;"> n</span><span style="color:#FF79C6;">&gt;</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">then</span><span style="color:#F8F8F2;"> MA1:</span><span style="color:#50FA7B;">MA</span><span style="color:#F8F8F2;">(CLOSE,P1);{如果n</span><span style="color:#FF79C6;">&gt;=</span><span style="color:#F8F8F2;">1则输出ma1指标线}</span></span>
<span class="line"><span style="color:#FF79C6;">IF</span><span style="color:#F8F8F2;"> n</span><span style="color:#FF79C6;">&gt;</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">then</span><span style="color:#F8F8F2;"> MA2:</span><span style="color:#50FA7B;">MA</span><span style="color:#F8F8F2;">(CLOSE,P2);{如果n</span><span style="color:#FF79C6;">&gt;=</span><span style="color:#F8F8F2;">2则输出ma1指标线}</span></span>
<span class="line"><span style="color:#FF79C6;">IF</span><span style="color:#F8F8F2;"> n</span><span style="color:#FF79C6;">&gt;</span><span style="color:#BD93F9;">2</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">then</span><span style="color:#F8F8F2;"> MA3:</span><span style="color:#50FA7B;">MA</span><span style="color:#F8F8F2;">(CLOSE,P3);{如果n</span><span style="color:#FF79C6;">&gt;=</span><span style="color:#F8F8F2;">3则输出ma1指标线}</span></span>
<span class="line"><span style="color:#FF79C6;">IF</span><span style="color:#F8F8F2;"> n</span><span style="color:#FF79C6;">&gt;</span><span style="color:#BD93F9;">3</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">then</span><span style="color:#F8F8F2;"> MA4:</span><span style="color:#50FA7B;">MA</span><span style="color:#F8F8F2;">(CLOSE,P4);{如果n</span><span style="color:#FF79C6;">&gt;=</span><span style="color:#F8F8F2;">4则输出ma1指标线}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>在使用条件语句“IF cond THEN”中，序列模式下，cond如果是序列变量，那么IF语句只取最后序列值做为条件判断，比如：</p><p>代码:</p><div class="language-vb line-numbers-mode" data-ext="vb"><pre class="shiki dracula" style="background-color:#282A36;" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">fc:</span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;">close;</span></span>
<span class="line"><span style="color:#F8F8F2;">fo:</span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;">open;</span></span>
<span class="line"><span style="color:#FF79C6;">if</span><span style="color:#F8F8F2;"> fc</span><span style="color:#FF79C6;">&gt;</span><span style="color:#F8F8F2;">fo </span><span style="color:#FF79C6;">then</span><span style="color:#F8F8F2;"> //这里的fc、fo是序列变量，因此只取最后一个周期的条件做为判断依</span></span>
<span class="line"><span style="color:#F8F8F2;">据</span></span>
<span class="line"><span style="color:#F8F8F2;">xx:</span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">；</span></span>
<span class="line"><span style="color:#FF79C6;">else</span></span>
<span class="line"><span style="color:#F8F8F2;">xx:</span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">y:xx;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里，if fc&gt;fo then 这种写法的本意是，“如果收盘价大于开盘价则”，是针对序列变量的每个数据（相当于数组的每个元素），但是在序列模式下是不会得到执行结果的，在模型终端公式编辑器的序列模式运行中，正确的写法应该是这样的：</p><p>代码:</p><div class="language-vb line-numbers-mode" data-ext="vb"><pre class="shiki dracula" style="background-color:#282A36;" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">//如果xx是序列变量，则代码参考如下</span></span>
<span class="line"><span style="color:#F8F8F2;">fc:</span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;">close;</span></span>
<span class="line"><span style="color:#F8F8F2;">fo:</span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;">open;</span></span>
<span class="line"><span style="color:#FF79C6;">for</span><span style="color:#F8F8F2;"> i</span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">to</span><span style="color:#F8F8F2;"> datacount </span><span style="color:#FF79C6;">do</span></span>
<span class="line"><span style="color:#F8F8F2;">begin</span></span>
<span class="line"><span style="color:#FF79C6;">if</span><span style="color:#F8F8F2;"> fc[i]</span><span style="color:#FF79C6;">&gt;</span><span style="color:#F8F8F2;">fo[i] </span><span style="color:#FF79C6;">then</span></span>
<span class="line"><span style="color:#F8F8F2;">xx[i]:</span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">; //请注意这里跟上面代码的不同</span></span>
<span class="line"><span style="color:#FF79C6;">else</span></span>
<span class="line"><span style="color:#F8F8F2;">xx[i]:</span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#8BE9FD;">end</span></span>
<span class="line"><span style="color:#F8F8F2;">y:xx;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,65),e=[o];function F(c,r){return n(),a("div",null,e)}const i=s(p,[["render",F],["__file","control_statement.html.vue"]]);export{i as default};
