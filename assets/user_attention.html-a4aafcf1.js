import{_ as l}from"./内置API_下载python库-6c9908d4.js";import{_ as t,r as o,o as p,c as i,b as n,e as s,d as r,a}from"./app-4f7ad5aa.js";const c="/assets/内置API_K线回放-f0f166ba.png",d="/assets/内置API_停止策略1-660e5a2b.png",F="/assets/内置API_停止策略2-c93e6732.png",h="/assets/内置API_停止策略3-2ebf0e22.png",y="/assets/内置API_停止策略4-dfca1cc1.png",u="/assets/内置API_数据下载1-bd7db774.png",_="/assets/内置API_定时下载-034ff844.png",m={},f=a('<h2 id="安装路径的选择" tabindex="-1"><a class="header-anchor" href="#安装路径的选择" aria-hidden="true">#</a> 安装路径的选择</h2><p>在安装 QMT 软件时，<strong>请不要安装在C盘，以避免因权限问题导致的使用问题</strong></p><p>若是只能安装到C盘，请在启动时选择<code>以管理员权限启动</code></p><h2 id="下载python库" tabindex="-1"><a class="header-anchor" href="#下载python库" aria-hidden="true">#</a> 下载python库</h2><p>初次使用 QMT 时，请确保补全所需的 Python 库。安装完毕后，不要忘记重启客户端。</p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>在盘中，下载速度会很慢，建议盘前或盘后更新。</p></div><p><img src="'+l+'" alt="下载python库"></p><h2 id="关于contextinfo" tabindex="-1"><a class="header-anchor" href="#关于contextinfo" aria-hidden="true">#</a> 关于ContextInfo</h2>',8),v=n("code",null,"ContextInfo",-1),b=n("code",null,"ContextInfo",-1),g=n("code",null,"handlebar",-1),x={href:"https://dict.thinktrader.net/innerApi/question_answer.html#%E7%B3%BB%E7%BB%9F%E5%AF%B9%E8%B1%A1-contextinfo-%E9%80%90-k-%E7%BA%BF%E4%BF%9D%E5%AD%98%E7%9A%84%E6%9C%BA%E5%88%B6",target:"_blank",rel:"noopener noreferrer"},C=n("code",null,"ContextInfo",-1),A=a(`<h3 id="推荐用法" tabindex="-1"><a class="header-anchor" href="#推荐用法" aria-hidden="true">#</a> 推荐用法</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dracula" style="background-color:#282A36;" tabindex="0"><code><span class="line"><span style="color:#FF79C6;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;">G</span><span style="color:#F8F8F2;">(): </span><span style="color:#FF79C6;">pass</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">g </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> G()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">def</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">init</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">ContextInfo</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">    g.stock_list </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">000001.SZ</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">def</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">handlebar</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">ContextInfo</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">    g.stock_list.append(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">600000.SH</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="错误用法" tabindex="-1"><a class="header-anchor" href="#错误用法" aria-hidden="true">#</a> 错误用法</h3><div class="custom-container danger"><p class="custom-container-title">警告</p><p>下面的示例请勿使用</p></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dracula" style="background-color:#282A36;" tabindex="0"><code><span class="line"><span style="color:#FF79C6;">def</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">init</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">ContextInfo</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">    ContextInfo.stock_list </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">000001.SZ</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">def</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">handlebar</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">ContextInfo</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">    ContextInfo.stock_list.append(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">600000.SH</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="关于线程和进程" tabindex="-1"><a class="header-anchor" href="#关于线程和进程" aria-hidden="true">#</a> 关于线程和进程</h2><p>QMT中，python<strong>无法</strong>使用多线程和多进程，而且<strong>所有策略都在同一线程中执行</strong>，所以策略中应该尽量避免阻塞类的写法，否则会影响其他策略的执行。</p><h2 id="主图解析" tabindex="-1"><a class="header-anchor" href="#主图解析" aria-hidden="true">#</a> <strong>主图</strong>解析</h2><p>如下图所示，策略执行依赖于K线图。这里所说的主图即是K线图，策略正是在K线图上运行，也是由它驱动的（也有非K线驱动的策略写法，详见快速入门）。</p><p><strong>K线回放</strong>：策略在客户端运行时会从第一根K线开始，依次调用<code>handlebar</code>函数，直至最后一根K线。并且在盘中，每一个新的行情快照都会触发一次<code>handlebar</code>函数调用（无论主图的周期如何）。如果想要过滤掉某些K线，可以设置右侧的快速计算，或使用<code>ContextInfo. is_last_bar ()</code>函数进行过滤。</p><p><img src="`+c+'" alt="Alt text"></p><h2 id="策略运行无反应-运行报错提示-run-script-failed" tabindex="-1"><a class="header-anchor" href="#策略运行无反应-运行报错提示-run-script-failed" aria-hidden="true">#</a> 策略运行无反应/运行报错提示 &quot;run script failed! &quot;</h2><p>最快解决方法是点击右上角<strong>布局</strong>按钮，选择<strong>恢复默认布局</strong></p><p>如果策略运行后无任何反应，首先检查客户端是否有其他策略正在运行，如果有，请先将其停止，然后重试。检查方法如下图所示：</p><ul><li><ol><li></li></ol></li></ul><p><img src="'+d+'" alt="Alt text"></p><ul><li><ol start="2"><li></li></ol></li></ul><p><img src="'+F+'" alt="Alt text"></p><ul><li><ol start="3"><li></li></ol></li></ul><p><img src="'+h+'" alt="Alt text"></p><ul><li><ol start="4"><li></li></ol></li></ul><p><img src="'+y+'" alt="Alt text"></p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>最后建议重启客户端</p></div><h2 id="数据下载" tabindex="-1"><a class="header-anchor" href="#数据下载" aria-hidden="true">#</a> 数据下载</h2><p>QMT提供了许多接口来依赖数据下载功能。客户端的数据下载功能如下图所示：</p><p><img src="'+u+'" alt="Alt text"> 而且，在批量下载中可以设置定时下载，这样可以方便地每天自动下载当日的行情数据。 <img src="'+_+'" alt="Alt text"></p>',26);function B(E,I){const e=o("ExternalLinkIcon");return p(),i("div",null,[f,n("p",null,[s("由于底层机制的限制，"),v,s("中存储的变量值将会回滚，即在对"),b,s("中的变量进行修改之后，在下一次"),g,s("调用时，这些修改将不会保留。具体细节请参阅"),n("a",x,[s("常见问题"),r(e)]),s("。因此，在完全理解"),C,s("机制之前，请避免在其中存储任何变量。")]),A])}const P=t(m,[["render",B],["__file","user_attention.html.vue"]]);export{P as default};
