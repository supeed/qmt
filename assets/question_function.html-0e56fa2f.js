import{_ as s,o as n,c as a,a as l}from"./app-4f7ad5aa.js";const e={},o=l(`<h3 id="导入xtquant库时提示-no-module-named-xtquant-ipythonapiclient" tabindex="-1"><a class="header-anchor" href="#导入xtquant库时提示-no-module-named-xtquant-ipythonapiclient" aria-hidden="true">#</a> 导入xtquant库时提示 <code>NO module named &#39;xtquant.IPythonAPiClient&#39;</code></h3><p>1、目前xtquant支持的python版本为 64位python3.6----3.11，请使用支持的python版本重试</p><h3 id="连接-xtquant-时失败-返回-1及解决方法" tabindex="-1"><a class="header-anchor" href="#连接-xtquant-时失败-返回-1及解决方法" aria-hidden="true">#</a> 连接 xtquant 时失败，返回-1及解决方法</h3><ol><li>客户端是否以极简模式登录（登录qmt系统时需要勾选极简模式）</li><li>检查路径是否正确</li></ol><ul><li><code>miniqmt</code>：路径指定到安装目录下<code>\\userdata_mini</code>文件夹</li><li><code>投研端</code>：路径指定到安装目录下<code>\\userdata</code>文件夹</li></ul><ol start="3"><li>客户端安装在C盘的话，每次都需要用管理员权限运行策略，才能正常连接，否则有权限问题。</li></ol><div class="custom-container tip"><p class="custom-container-title">提示</p><p>不建议安装在C盘。</p><p>可以通过以下测试来验证是否有写入权限</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dracula" style="background-color:#282A36;" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">file_path </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">r</span><span style="color:#FF5555;">&quot;</span><span style="color:#F1FA8C;">d:</span><span style="color:#FF79C6;">\\q</span><span style="color:#F1FA8C;">mt</span><span style="color:#FF79C6;">\\u</span><span style="color:#F1FA8C;">serdata_mini</span><span style="color:#FF79C6;">\\e</span><span style="color:#F1FA8C;">xample</span><span style="color:#8BE9FD;font-style:italic;">.</span><span style="color:#F1FA8C;">txt</span><span style="color:#FF5555;">&quot;</span><span style="color:#F8F8F2;">  </span><span style="color:#6272A4;"># 设置文件路径和名称</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># 使用open函数创建文件，并指定写入模式(&quot;w&quot;表示写入模式)</span></span>
<span class="line"><span style="color:#FF79C6;">with</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;">open</span><span style="color:#F8F8F2;">(file_path, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">w</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">as</span><span style="color:#F8F8F2;"> file:</span></span>
<span class="line"><span style="color:#F8F8F2;">    file.write(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">123</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)  </span><span style="color:#6272A4;"># 向文件写入内容</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果出现<code>PermissionError</code>，则说明存在文件权限问题</p></div><ol start="4"><li>路径正确时换个<code>session</code>（任意整数即可）</li></ol><div class="custom-container tip"><p class="custom-container-title">提示</p><p>由于机制限制，同一个session的两次python进程 connect之间必须超过3秒钟</p></div><ol start="5"><li>以上方法都不行，就是QMT用户权限问题</li></ol><h3 id="执行xtdatacenter-init时提示监听58609端口失败" tabindex="-1"><a class="header-anchor" href="#执行xtdatacenter-init时提示监听58609端口失败" aria-hidden="true">#</a> 执行xtdatacenter.init时提示监听58609端口失败</h3><p>说明当前环境的58609端口被其他程序占用,通常是启动了两个xtdc服务导致的</p><p><strong>方法1.</strong> 可用通过指定<code>xtdc.init(False)</code>后,使用<code>xtdc.listen(port)</code>指定自己需要的端口</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dracula" style="background-color:#282A36;" tabindex="0"><code><span class="line"><span style="color:#FF79C6;">from</span><span style="color:#F8F8F2;"> xtquant </span><span style="color:#FF79C6;">import</span><span style="color:#F8F8F2;"> xtdatacenter </span><span style="color:#FF79C6;">as</span><span style="color:#F8F8F2;"> xtdc </span></span>
<span class="line"><span style="color:#F8F8F2;">xtdc.set_token(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">你的token</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">xtdc.init(</span><span style="color:#BD93F9;">False</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">port </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">58601</span></span>
<span class="line"><span style="color:#F8F8F2;">xtdc.listen(</span><span style="color:#FFB86C;font-style:italic;">port</span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;">port)</span></span>
<span class="line"><span style="color:#8BE9FD;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">f</span><span style="color:#F1FA8C;">&quot;服务启动,开放端口：</span><span style="color:#BD93F9;">{</span><span style="color:#F8F8F2;">port</span><span style="color:#BD93F9;">}</span><span style="color:#F1FA8C;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>方法2.</strong> 关闭所有py程序，或重启电脑，再执行xtdc.init</p><h3 id="下单后-查询委托的投资备注只有前半部分" tabindex="-1"><a class="header-anchor" href="#下单后-查询委托的投资备注只有前半部分" aria-hidden="true">#</a> 下单后，查询委托的投资备注只有前半部分</h3><p>极简客户端的<code>order_remark</code>字段有长度限制，最大 24 个英文字符(一个中文占3个)， 超出的部分会丢弃。大qmt 没有长度限制。</p>`,17),t=[o];function p(c,i){return n(),a("div",null,t)}const F=s(e,[["render",p],["__file","question_function.html.vue"]]);export{F as default};
